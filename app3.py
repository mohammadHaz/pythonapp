 #pip install pandas scikit-learn
#pip install pandas scikit-learn --no-warn-script-location
#pip install nltk
#pip install arabic_reshaper
#pip install python-bidi

import numpy as np
import pandas as pd
import nltk
import string
import arabic_reshaper
from nltk.corpus import stopwords
from bidi.algorithm import get_display
from sklearn.feature_extraction.text import TfidfVectorizer

nltk.download('stopwords')
punc = string.punctuation

# ูุงุฆูุฉ ุงููููุงุช ุงูุดุงุฆุนุฉ ุงูุชู ุณูุชู ุงุณุชุจุนุงุฏูุง (ููููู ุชูุณูุนูุง)
ARABIC_STOPWORDS = set(stopwords.words('arabic'))

def preprocess_arabic(text):
    """ุชูุธูู ุงููุตูุต ุงูุนุฑุจูุฉ"""
    text = str(text).translate(str.maketrans('','',punc))  # ุฅุฒุงูุฉ ุนูุงูุงุช ุงูุชุฑููู
    words = text.split()  # ุชูุณูู ุงููุต ุฅูู ูููุงุช
    words = [word for word in words if word not in ARABIC_STOPWORDS]  # ุฅุฒุงูุฉ ุงููููุงุช ุงูุดุงุฆุนุฉ
    return " ".join(words)  # ุฅุฑุฌุงุน ุงููุต ุจุนุฏ ุฅุฒุงูุฉ ุงููููุงุช ุงูุดุงุฆุนุฉ

def print_arabic_text(text):
    """ูุฅุธูุงุฑ ุงููุตูุต ุงูุนุฑุจูุฉ ุจุดูู ุตุญูุญ"""
    reshaped_text = arabic_reshaper.reshape(text)  # ุชุนุฏูู ุงููุต ููุชูุงุณุจ ูุน ุงูุงุชุฌุงู
    bidi_text = get_display(reshaped_text)  # ุถุจุท ุงููุต ููุธูุฑ ุจุดูู ุตุญูุญ ูู ุงูุงุชุฌุงู ูู ุงููููู ูููุณุงุฑ
    print(bidi_text)

# ูุฑุงุกุฉ ุงููุณุชูุฏุงุช ูู ููู CSV ุฏุงุฎู ูุฌูุฏ "data"
file_path = "data/arabic_text_data.csv"  # ุชุฃูุฏ ูู ุฃู ุงูููู ููุฌูุฏ ุฏุงุฎู ูุฌูุฏ data

df = pd.read_csv(file_path)  # ูุฑุงุกุฉ ุงูููู
documents = np.array(df["text"].dropna())  # ุงุณุชุฎุฑุงุฌ ุงููุตูุต ููุตูููุฉ ุจุนุฏ ุฅุฒุงูุฉ ุงูููู ุงููุงุฑุบุฉ

# ุชุญุถูุฑ ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู TfidfVectorizer
vectorizer = TfidfVectorizer(preprocessor=preprocess_arabic)  # ุชุญุฏูุฏ ุงูุฏุงูุฉ ุงููุฎุตุตุฉ ูููุนุงูุฌุฉ ุงููุจุฏุฆูุฉ
tfidf_matrix = vectorizer.fit_transform(documents)  # ุญุณุงุจ TF-IDF

#  ุทุจุงุนุฉ ุงููุชุงุฆุฌ ููู ูุณุชูุฏ
feature_names = vectorizer.get_feature_names_out()  # ุงุณุชุฎุฑุงุฌ ุฃุณูุงุก ุงููููุงุช (ุงููุฒุงูุง)
for i, doc_tfidf in enumerate(tfidf_matrix.toarray()):
    print(f"๐ Document {i+1} - TF-IDF values:")
    for j, score in enumerate(doc_tfidf):
        if score > 0:  # ุนุฑุถ ุงููููุงุช ุงูุชู ุชุญุชูู ุนูู ููู TF-IDF ุฃูุจุฑ ูู ุงูุตูุฑ
            print_arabic_text(f"{feature_names[j]}: {score:.4f}")
    print("\n")
